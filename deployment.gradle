/**
 * Testing
 */
test {
	useJUnitPlatform()
}

/**
 * Javadoc
 */
javadoc {
    options {
        title = "${project.name} (${project.version})"
        windowTitle = "${project.name} (${project.version})"
        encoding = "UTF-8"
    }
}

/**
 * Sources - build a jar with source files
 */
task sourcesJar(type: Jar, dependsOn: classes, description: 'Builds the sourcesJar.', group: 'build') {
    from sourceSets.main.allSource
    baseName = baseName.toLowerCase()
    classifier = 'sources'
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc, description: 'Builds the javadocJar.', group: 'build') {
    classifier = 'javadoc'
    baseName = baseName.toLowerCase()
    from javadoc.destinationDir
}

/**
 * Artifacts
 */
artifacts {
    archives sourcesJar
    archives javadocJar
}

/**
 * Deployment
 */
publishing {
    publications {
        mainProject(MavenPublication) {
            from project.components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}

/**
 * Artifactory Upload
 */
artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getenv("BINTRAY_USER")
            password = System.getenv("BINTRAY_API_KEY")
        }
        defaults {
            publications('mainProject')
            publishArtifacts = true
            publishPom = true
            properties = [
                    'build.number': System.getenv("CI_PIPELINE_IID"),
                    'build.name'  : String.valueOf(project.name).toLowerCase()
            ]
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
    clientConfig.info.setBuildNumber(System.getenv("CI_PIPELINE_IID"))
    clientConfig.info.setBuildName(String.valueOf(project.name).toLowerCase())
}

/**
 * Bintray Upload
 */
bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_API_KEY")
    publications = ['mainProject']
    dryRun = false
    pkg {
        // jcenter repository namespace and name
        userOrg = String.valueOf(System.getenv('CI_PROJECT_NAMESPACE')).toLowerCase()
        repo = 'maven'
        name =  String.valueOf(project.name).toLowerCase()
        desc = project.description
        licenses = ['MIT']
        websiteUrl = "https://github.com/twitch4j/twitch4j"
        issueTrackerUrl = "https://github.com/twitch4j/twitch4j/issues"
        vcsUrl = "https://github.com/twitch4j/twitch4j.git"
        labels = ['twitch', 'twitch-api-v5', 'twitch4j.helix', 'twitch-pubsub', 'twitch-irc', 'helix']
        publicDownloadNumbers = true
        version {
            name = String.valueOf(project.version).toLowerCase()
            vcsTag = project.version
            released = new Date()
        }
    }
}
